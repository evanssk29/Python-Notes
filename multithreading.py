# multiprocessing = running tasks in parallel on different cpu cores, bypasses GIL used for threading
#                   multiprocessing = better for cpu bound tasks (heavy cpu usage)
#                   multithreading = better for io bound tasks (waiting around)

from multiprocessing import Process, cpu_count
import time

def counter(num):
    count = 0
    while count < num:
        count += 1

def main():

    a = Process(target=counter, args=(125000000,))
    b = Process(target=counter, args=(125000000,))
    c = Process(target=counter, args=(125000000,))
    d = Process(target=counter, args=(125000000,))
    e = Process(target=counter, args=(125000000,))
    f = Process(target=counter, args=(125000000,))
    g = Process(target=counter, args=(125000000,))
    h = Process(target=counter, args=(125000000,))
    i = Process(target=counter, args=(125000000,))
    j = Process(target=counter, args=(125000000,))
    k = Process(target=counter, args=(125000000,))
    l = Process(target=counter, args=(125000000,))
    m = Process(target=counter, args=(125000000,))
    n = Process(target=counter, args=(125000000,))
    o = Process(target=counter, args=(125000000,))
    p = Process(target=counter, args=(125000000,))
    q = Process(target=counter, args=(125000000,))
    r = Process(target=counter, args=(125000000,))
    s = Process(target=counter, args=(125000000,))
    t = Process(target=counter, args=(125000000,))
    u = Process(target=counter, args=(125000000,))
    v = Process(target=counter, args=(125000000,))
    w = Process(target=counter, args=(125000000,))
    x = Process(target=counter, args=(125000000,))
    y = Process(target=counter, args=(125000000,))
    z = Process(target=counter, args=(125000000,))
    a1 = Process(target=counter, args=(125000000,))
    a2 = Process(target=counter, args=(125000000,))
    a3 = Process(target=counter, args=(125000000,))
    a4 = Process(target=counter, args=(125000000,))
    a5 = Process(target=counter, args=(125000000,))
    a6 = Process(target=counter, args=(125000000,))


    print(cpu_count())

    a.start()
    b.start()
    c.start()
    d.start()
    e.start()
    f.start()
    g.start()
    h.start()
    i.start()
    j.start()
    k.start()
    l.start()
    m.start()
    n.start()
    o.start()
    p.start()
    q.start()
    r.start()
    s.start()
    t.start()
    u.start()
    v.start()
    w.start()
    x.start()
    y.start()
    z.start()
    a1.start()
    a2.start()
    a3.start()
    a4.start()
    a5.start()
    a6.start()

    a.join()
    b.join()
    c.join()
    d.join()
    e.join()
    f.join()
    g.join()
    h.join()
    i.join()
    j.join()
    k.join()
    l.join()
    m.join()
    n.join()
    o.join()
    p.join()
    q.join()
    r.join()
    s.join()
    t.join()
    u.join()
    v.join()
    w.join()
    x.join()
    y.join()
    z.join()
    a1.join()
    a2.join()
    a3.join()
    a5.join()
    a6.join()

    print("Finished in:", time.perf_counter(), "seconds")


if __name__ == '__main__':
    main()